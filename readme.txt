色彩空间 
1）BGR RGB
     opencv常用的色彩空间BGR
2）HSV（HSB）：（锥形模型）
     Hue:色相，即色彩，如红色、蓝色等，用角度变量来进行衡量，取值 0~360
     Saturation：饱和度，表示颜色接近光谱色的程度，可以看纯色中混入白色的量，饱和度越高，颜色约鲜艳
     Value(Brightness)  明度，表示颜色的明亮程度，控制纯色中混入黑色的量，黑色越少，明度越高
3）HSL
     模型上方纯白
     Hue:色相，与HSV相同
     Saturation：饱和度，与黑白无关，不控制颜色中混入黑白的多少，看得是纯色稀释程度，浓度
     Lightness：控制纯色中混入的黑白两种颜色
4）YUV
     颜色编码方法，用于视频处理软件中，允许降低色度带宽，人眼无法识别众多色度
     Y：明亮度（Luminance或Luma），灰阶值
     U、V表示色度，描述色彩、饱和度
YUV最大优点占用极少的带宽，一般用于视频、电视
4：4: 4
4:2:0 4个像素，2个U或者2个V

YUV用于传输，最后通过RGB展示
Y = 0.299 * R + 0.587 * G + 0.114 * B
U = -0.147 * R - 0.289 * G + 0.436 * B
V = 0.615 * R - 0.515 * G - 0.100 * B

R = Y + 1.14 * V
G = Y - 0.39 * U - 0.58 * V
B = Y + 2.03 * U

数据结构：
用mat数据结构表示图片，python中把mat转化成了numpy的ndarray，缺少了一部分属性
ndarray常见四种属性：
img.data()图片中的数据，data是地址
img.size()元素总个数
img.dtype()图片数据类型
img.shape()
img.ndim() 通道数

Opencv 读不到图片不会报错，对象会变为Nonetype

图像形态学（基本思想还是卷积）
利用结构元（本质上是卷积核）来测量或提取输入图像中相应的形状或特征，以便进一步进行图像识别和目标分析
第一步：图像全局二值化，将每个像素变成两种值，0和255,[阈值设定？
    自适应全局二值化：图片用同一个阈值会造成画面部分细节变成灰度图之后丢失，可以选中区域自动设定阈值
    自适应二值化效果较差？

图像轮廓：具有相同颜色或灰度的连续点的区县内

平方运算速度会高于绝对值运算